<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A modular framework for Hugo on HugoModo</title>
    <link>https://hugomodo.github.io/</link>
    <description>Recent content in A modular framework for Hugo on HugoModo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Jan 2019 01:20:15 +0000</lastBuildDate>
    
	<atom:link href="https://hugomodo.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Trouble With Chroma, Hugo&#39;s Syntax Highlighting Library</title>
      <link>https://hugomodo.github.io/blog/the-trouble-with-chroma/</link>
      <pubDate>Mon, 31 Dec 2018 22:57:07 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/blog/the-trouble-with-chroma/</guid>
      <description>One of the core principles of HugoModo is to stick to the Hugo way of doing things where possible and sensible to do so. This reduces the likelihood of incompatibility, and should make for greater ease of use for anyone familiar with Hugo or working from the Hugo documentation.
Of course, HugoModo deliberately does a lot differently, emphasising the principle of Convention over Configuration where Hugo otherwise emphasises speed. The aim is to achieve a comfortable middle-ground that remains blazing fast, but that also provides for greater ease of use and extension.</description>
    </item>
    
    <item>
      <title>Shortcode Partials</title>
      <link>https://hugomodo.github.io/extensions/shortcode-partials/</link>
      <pubDate>Mon, 31 Dec 2018 20:08:37 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/extensions/shortcode-partials/</guid>
      <description>What&amp;rsquo;s the issue? HugoModo strives for third-party compatibility. The baseline for this is currently Forestry CMS. When asking the question, &amp;ldquo;does it work with Forestry CMS?&amp;rdquo; of the Image Processing extension, the answer was not yes - it was mostly.
The problem is, Forestry is unaware of shortcodes. These could be hand-typed by a developer easily, but when it comes to non-technical authors adding images to content, they probably aren&amp;rsquo;t going to do that.</description>
    </item>
    
    <item>
      <title>Forestry Compatible</title>
      <link>https://hugomodo.github.io/blog/forestry-compatible/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/blog/forestry-compatible/</guid>
      <description>HugoModo is designed to be compatible with the static site, headless CMS, Forestry.
When you first hook a site up with Forestry, it assumes the same default behaviour that HugoModo does. In particular, this means images are stored in the static directory and are exempt from image processing.
But Forestry has offered configuration for using a content directory instead for quite a while now. Enabling this feature will store uploads as page resources, and will allow for the use of Hugo&amp;rsquo;s in-built image processing.</description>
    </item>
    
    <item>
      <title>Image Processing</title>
      <link>https://hugomodo.github.io/extensions/image-processing/</link>
      <pubDate>Sun, 30 Dec 2018 16:54:08 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/extensions/image-processing/</guid>
      <description>Description Features  Provides imgproc and figproc shortcodes for image processing in your content files. Uses srcset to load responsive image sizes on different screen resolutions. Can be configured to use Page Bundles, a headless Resources bundle, or both!  Todo  Equivalents for theme layouts are provided: image-processing/imgproc.html and image-processing/figproc.html.  These already exist. Modification required so that context can be passed.  Option to override existing figure shortcode.</description>
    </item>
    
    <item>
      <title>Best Motherfucking Website</title>
      <link>https://hugomodo.github.io/themes/best-motherfucking-website/</link>
      <pubDate>Sat, 29 Dec 2018 14:39:14 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/themes/best-motherfucking-website/</guid>
      <description>Based on The Best Motherfucking Website, this theme provides minimal style definitions to create a clean, highly readable theme to be used as the base for customisation or for websites with a minimalist feel.</description>
    </item>
    
    <item>
      <title>Hugomodo</title>
      <link>https://hugomodo.github.io/themes/hugomodo/</link>
      <pubDate>Sat, 29 Dec 2018 14:38:59 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/themes/hugomodo/</guid>
      <description>The base theme for HugoModo&amp;rsquo;s modular approach to Hugo website design. It provides the asset precompilation pipeline and bundler data files, clean and semantic HTML, and well-organised partials for ease of developing child themes.
It provides minimal styling, so is best used as the base for a child theme. HugoModo themes which depend on it will include this theme automatically.</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://hugomodo.github.io/docs/shortcodes/</link>
      <pubDate>Sat, 29 Dec 2018 12:58:37 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/docs/shortcodes/</guid>
      <description>Hugo All of the standard Hugo shortcodes work with HugoModo by default.
Those listed below also work with the shims provided by the Shortcode Partials extension.
figure Markup {{&amp;lt; figure src=&amp;#34;/img/mountaineer.jpg&amp;#34; title=&amp;#34;A walk with a view.&amp;#34; &amp;gt;}} Example   A walk with a view.   gist Markup {{&amp;lt; gist spf13 7896402 &amp;gt;}} Example  highlight Markup {{&amp;lt; highlight go-html-template &amp;gt;}} &amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; {{ range .</description>
    </item>
    
    <item>
      <title>Hugo Goes Modular</title>
      <link>https://hugomodo.github.io/blog/hugo-goes-modular/</link>
      <pubDate>Sat, 29 Dec 2018 01:11:18 +0000</pubDate>
      
      <guid>https://hugomodo.github.io/blog/hugo-goes-modular/</guid>
      <description>A Better Base HugoModo removes the main content div from Hugo&amp;rsquo;s default base template, and adds a new partial called the &amp;lsquo;foot&amp;rsquo;. The aim is to follow certain best practices. We want to keep markup to a minimum, and where possible to only use HTML5&amp;rsquo;s semantic elements (&amp;lsquo;main&amp;rsquo;, &amp;lsquo;section&amp;rsquo;, etc. rather than &amp;lsquo;div&amp;rsquo;). And the foot partial is provided mainly to load scripts after the main content, so as to provide for fast page rendering to visitors.</description>
    </item>
    
  </channel>
</rss>